name: Generate Daily Grids

on:
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      # This is the step that will fix the AWS authentication issue
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # <-- IMPORTANT: Change this to your RDS instance's region

      - name: Get Runner IP Address
        id: get_ip
        run: echo "RUNNER_IP_ADDRESS=$(curl -s https://api.ipify.org)" >> $GITHUB_ENV

      - name: Add Runner IP to AWS Security Group
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 5432 \
            --cidr ${{ env.RUNNER_IP_ADDRESS }}/32

      - name: Generate the Grid Files
        run: node generateGrid.js
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          DB_PORT: ${{ secrets.DB_PORT }}

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add 'todays_grid_*.json'
          git commit -m "Automated: Generate daily grids" || echo "No changes to commit"
          git push

      - name: Remove Runner IP from AWS Security Group
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_SECURITY_GROUP_ID }} \
            --protocol tcp \
            --port 5432 \
            --cidr ${{ env.RUNNER_IP_ADDRESS }}/32
